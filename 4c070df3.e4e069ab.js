(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{136:function(e,r,t){"use strict";t.r(r),r.default=t.p+"assets/images/records-23dbcb000b5916fb45b49eb334b8e9e4.png"},77:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return i})),t.d(r,"metadata",(function(){return c})),t.d(r,"toc",(function(){return s})),t.d(r,"default",(function(){return u}));var n=t(3),o=t(7),a=(t(0),t(94)),i={id:"records",title:"Records"},c={unversionedId:"overview/records",id:"overview/records",isDocsHomePage:!1,title:"Records",description:"Screenshot of the record viewer",source:"@site/docs/overview/records.md",slug:"/overview/records",permalink:"/aft/overview/records",version:"current",sidebar:"main",previous:{title:"Identity",permalink:"/aft/overview/identity"},next:{title:"Internals",permalink:"/aft/overview/internals"}},s=[],l={toc:s};function u(e){var r=e.components,i=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,i,{components:r,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("img",{alt:"Screenshot of the record viewer",src:t(136).default})),Object(a.b)("p",null,"A record is roughly analogous to a row in a relational database. Logically, they're a tuple of named fields."),Object(a.b)("p",null,"In JSON, they're an Object with string keys and non-Array or Object values. "),Object(a.b)("p",null,"In memory, they're stored as structs manipulated using reflection. On disk, they're Gob encoded structs."),Object(a.b)("p",null,'Unlike a relational database, Aft treats relationships between records specially; they\'re not stored on the record itself, but in a separate "links" index. This is, however, opaque to the end-user.'))}u.isMDXComponent=!0},94:function(e,r,t){"use strict";t.d(r,"a",(function(){return p})),t.d(r,"b",(function(){return b}));var n=t(0),o=t.n(n);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var r=o.a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},p=function(e){var r=u(e.components);return o.a.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},f=o.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),f=n,b=p["".concat(i,".").concat(f)]||p[f]||d[f]||a;return t?o.a.createElement(b,c(c({ref:r},l),{},{components:t})):o.a.createElement(b,c({ref:r},l))}));function b(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,i=new Array(a);i[0]=f;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);